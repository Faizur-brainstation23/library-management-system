2025-08-12 16:14:02 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 3432 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 16:14:02 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 16:14:02 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 16:14:08 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 16:14:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 198 ms. Found 9 JPA repository interfaces.
2025-08-12 16:14:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 16:14:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 16:14:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 16:14:12 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 16:14:12 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 8868 ms
2025-08-12 16:14:13 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 16:14:13 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 16:14:13 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 16:14:14 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 16:14:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 16:14:15 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3355b8ff
2025-08-12 16:14:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 16:14:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 16:14:16 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 16:14:20 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 16:14:20 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 16:14:20 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 16:14:22 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 16:14:25 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 16:14:25 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 16:14:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 16:14:27 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 26.988 seconds (process running for 28.714)
2025-08-12 16:14:49 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 16:14:49 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 16:14:49 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-12 16:14:57 [http-nio-8080-exec-3] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 6907 ms
2025-08-12 16:15:55 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 16:15:55 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 16:15:55 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 16:15:55 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 16:15:55 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 16:16:03 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 4516 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 16:16:03 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 16:16:03 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 16:16:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 16:16:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 207 ms. Found 9 JPA repository interfaces.
2025-08-12 16:16:09 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 16:16:09 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 16:16:09 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 16:16:09 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 16:16:09 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5853 ms
2025-08-12 16:16:10 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 16:16:10 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 16:16:11 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 16:16:11 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 16:16:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 16:16:12 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@103e7c7c
2025-08-12 16:16:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 16:16:12 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 16:16:12 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 16:16:15 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 16:16:15 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 16:16:16 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 16:16:16 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 16:16:17 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 16:16:20 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 16:16:20 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 16:16:21 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 16:16:21 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 19.409 seconds (process running for 20.345)
2025-08-12 16:16:24 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 16:16:24 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 16:16:24 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-12 16:16:34 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 7631 ms
2025-08-12 16:18:51 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 16:18:51 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 16:18:51 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 16:18:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 16:18:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 16:19:06 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 9676 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 16:19:06 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 16:19:06 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 16:19:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 16:19:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 180 ms. Found 9 JPA repository interfaces.
2025-08-12 16:19:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 16:19:11 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 16:19:11 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 16:19:11 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 16:19:11 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5572 ms
2025-08-12 16:19:12 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 16:19:12 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 16:19:12 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 16:19:13 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 16:19:13 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 16:19:14 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2932e15f
2025-08-12 16:19:14 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 16:19:14 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 16:19:14 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 16:19:18 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 16:19:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 16:19:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 16:19:19 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 16:19:22 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 16:19:22 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 16:19:23 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 16:19:23 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 19.67 seconds (process running for 20.744)
2025-08-12 16:20:42 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 16:20:42 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 16:20:42 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 16:20:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 16:20:42 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 16:20:50 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 12716 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 16:20:50 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 16:20:50 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 16:20:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 16:20:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 183 ms. Found 9 JPA repository interfaces.
2025-08-12 16:20:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 16:20:54 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 16:20:54 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 16:20:54 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 16:20:54 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4120 ms
2025-08-12 16:20:55 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 16:20:55 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 16:20:55 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 16:20:55 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 16:20:55 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 16:20:56 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7b2d58e6
2025-08-12 16:20:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 16:20:56 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 16:20:56 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 16:20:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 16:20:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 16:20:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 16:20:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 16:20:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 16:20:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 16:20:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 16:20:59 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 16:20:59 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 16:21:02 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 16:21:02 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 16:21:03 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 16:21:03 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 13.977 seconds (process running for 14.847)
2025-08-12 16:21:06 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 16:21:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 16:21:06 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-12 16:21:15 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 7108 ms
2025-08-12 16:21:45 [http-nio-8080-exec-5] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/octet-stream' is not supported
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:236)
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:141)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:227)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 16:22:05 [http-nio-8080-exec-6] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/octet-stream' is not supported
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:236)
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:141)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:227)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 16:23:02 [http-nio-8080-exec-7] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/octet-stream' is not supported
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:236)
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:141)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:227)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 16:23:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-12 16:23:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 16:23:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        books
        (about, audio_file_url, audio_file, author, available_copies, book_cover_url, book_cover, category_id, created_at, format, isbn, name, pdf_file_url, pdf_file, publication_year, short_details, total_copies, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-12 16:23:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    insert 
    into
        notifications
        (message, read, recipient, timestamp) 
    values
        (?, ?, ?, ?)
2025-08-12 16:23:31 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 16:25:47 [http-nio-8080-exec-10] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.HttpMediaTypeNotSupportedException: Content-Type 'application/octet-stream' is not supported
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver.readWithMessageConverters(AbstractMessageConverterMethodArgumentResolver.java:236)
	at org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver.resolveArgument(RequestPartMethodArgumentResolver.java:141)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:122)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:227)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:181)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 16:29:24 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 16:29:24 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 16:29:24 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 16:29:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 16:29:24 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 16:35:33 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 14124 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 16:35:34 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 16:35:34 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 16:35:36 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 16:35:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 151 ms. Found 9 JPA repository interfaces.
2025-08-12 16:35:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 16:35:38 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 16:35:38 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 16:35:38 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 16:35:38 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4350 ms
2025-08-12 16:35:39 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 16:35:39 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 16:35:39 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 16:35:40 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 16:35:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 16:35:40 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@6ffbf0ac
2025-08-12 16:35:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 16:35:40 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 16:35:40 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 16:35:43 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 16:35:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 16:35:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 16:35:44 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 16:35:48 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 16:35:48 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 16:35:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 16:35:49 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 16.548 seconds (process running for 17.319)
2025-08-12 16:35:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 16:35:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 16:35:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-12 16:36:00 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 6099 ms
2025-08-12 17:02:11 [HikariPool-1:housekeeper] WARN  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=10m639ms468µs926ns).
2025-08-12 17:04:50 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 17:04:50 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 17:04:50 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:04:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:04:50 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:05:20 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 10568 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:05:20 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:05:20 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:05:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:05:23 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 185 ms. Found 9 JPA repository interfaces.
2025-08-12 17:05:25 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:05:25 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:05:25 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:05:25 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:05:25 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4204 ms
2025-08-12 17:05:25 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:05:25 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:05:25 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:05:26 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:05:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:05:26 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@14b26e90
2025-08-12 17:05:26 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:05:27 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:05:27 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:05:29 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:05:30 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:05:30 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:05:31 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:05:34 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:05:34 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:05:35 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 17:05:35 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 15.481 seconds (process running for 16.225)
2025-08-12 17:05:58 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 17:05:58 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 17:05:58 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-12 17:06:07 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 7210 ms
2025-08-12 17:07:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-12 17:07:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 17:07:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        books
        (about, audio_file_url, audio_file, author, available_copies, book_cover_url, book_cover, category_id, created_at, format, isbn, name, pdf_file_url, pdf_file, publication_year, short_details, total_copies, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-12 17:07:20 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 17:07:20 [http-nio-8080-exec-7] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [bookCover]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.8524177460147090332\work\Tomcat\localhost\ROOT\upload_d3760261_26de_4843_8c40_2bdc180dfd38_00000001.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.8524177460147090332\work\Tomcat\localhost\ROOT\upload_d3760261_26de_4843_8c40_2bdc180dfd38_00000001.tmp
	... 13 common frames omitted
2025-08-12 17:09:40 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-12 17:09:40 [http-nio-8080-exec-9] ERROR c.l.m.e.GlobalExceptionHandler - Resource already exists: Book already exists with ISBN: '9780743273565'
2025-08-12 17:10:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-12 17:10:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 17:10:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    insert 
    into
        books
        (about, audio_file_url, audio_file, author, available_copies, book_cover_url, book_cover, category_id, created_at, format, isbn, name, pdf_file_url, pdf_file, publication_year, short_details, total_copies, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-12 17:10:07 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 17:10:07 [http-nio-8080-exec-10] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [bookCover]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.8524177460147090332\work\Tomcat\localhost\ROOT\upload_d3760261_26de_4843_8c40_2bdc180dfd38_00000009.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.8524177460147090332\work\Tomcat\localhost\ROOT\upload_d3760261_26de_4843_8c40_2bdc180dfd38_00000009.tmp
	... 13 common frames omitted
2025-08-12 17:10:07 [http-nio-8080-exec-10] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [pdfFile]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.8524177460147090332\work\Tomcat\localhost\ROOT\upload_d3760261_26de_4843_8c40_2bdc180dfd38_00000010.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.8524177460147090332\work\Tomcat\localhost\ROOT\upload_d3760261_26de_4843_8c40_2bdc180dfd38_00000010.tmp
	... 13 common frames omitted
2025-08-12 17:13:19 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 17:13:19 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 17:13:19 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:13:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:13:19 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:16:42 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 12028 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:16:42 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:16:42 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:16:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:16:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 172 ms. Found 9 JPA repository interfaces.
2025-08-12 17:16:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:16:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:16:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:16:46 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:16:46 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4036 ms
2025-08-12 17:16:47 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:16:47 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:16:47 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:16:48 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:16:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:16:48 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@103e7c7c
2025-08-12 17:16:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:16:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:16:48 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:16:50 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:16:50 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:16:51 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:16:51 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:16:51 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:16:53 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:16:54 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:16:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 17:16:55 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 13.223 seconds (process running for 13.982)
2025-08-12 17:20:24 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 17:20:24 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 17:20:24 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-12 17:20:33 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 7449 ms
2025-08-12 17:22:42 [http-nio-8080-exec-7] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
com.fasterxml.jackson.core.io.JsonEOFException: Unexpected end-of-input: expected close marker for Object (start marker at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 1])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 318]
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(ParserMinimalBase.java:642)
	at com.fasterxml.jackson.core.base.ParserBase._handleEOF(ParserBase.java:530)
	at com.fasterxml.jackson.core.base.ParserBase._eofAsNextChar(ParserBase.java:547)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd(ReaderBasedJsonParser.java:2490)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName(ReaderBasedJsonParser.java:912)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:399)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4971)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3887)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3855)
	at com.library.management.controller.BookController.createBookWithFiles(BookController.java:60)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 17:23:48 [http-nio-8080-exec-2] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
com.fasterxml.jackson.core.io.JsonEOFException: Unexpected end-of-input: expected close marker for Object (start marker at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 1])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 318]
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(ParserMinimalBase.java:642)
	at com.fasterxml.jackson.core.base.ParserBase._handleEOF(ParserBase.java:530)
	at com.fasterxml.jackson.core.base.ParserBase._eofAsNextChar(ParserBase.java:547)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd(ReaderBasedJsonParser.java:2490)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName(ReaderBasedJsonParser.java:912)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:399)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4971)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3887)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3855)
	at com.library.management.controller.BookController.createBookWithFiles(BookController.java:60)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 17:23:51 [http-nio-8080-exec-3] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
com.fasterxml.jackson.core.io.JsonEOFException: Unexpected end-of-input: expected close marker for Object (start marker at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 1])
 at [Source: REDACTED (`StreamReadFeature.INCLUDE_SOURCE_IN_LOCATION` disabled); line: 1, column: 318]
	at com.fasterxml.jackson.core.base.ParserMinimalBase._reportInvalidEOF(ParserMinimalBase.java:642)
	at com.fasterxml.jackson.core.base.ParserBase._handleEOF(ParserBase.java:530)
	at com.fasterxml.jackson.core.base.ParserBase._eofAsNextChar(ParserBase.java:547)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser._skipWSOrEnd(ReaderBasedJsonParser.java:2490)
	at com.fasterxml.jackson.core.json.ReaderBasedJsonParser.nextFieldName(ReaderBasedJsonParser.java:912)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserializeFromObject(BeanDeserializer.java:399)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:342)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4971)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3887)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3855)
	at com.library.management.controller.BookController.createBookWithFiles(BookController.java:60)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:565)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:991)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:896)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 17:24:26 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 17:24:26 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 17:24:26 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:24:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:24:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:26:56 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 11644 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:26:56 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:26:56 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:26:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:26:59 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 207 ms. Found 9 JPA repository interfaces.
2025-08-12 17:27:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:27:01 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:27:01 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:27:01 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:27:01 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4307 ms
2025-08-12 17:27:02 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:27:02 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:27:02 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:27:03 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:27:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:27:03 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c3710b3
2025-08-12 17:27:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:27:03 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:27:03 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:27:05 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:27:05 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:27:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:27:06 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:27:06 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:27:08 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:27:09 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:27:09 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file,) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
2025-08-12 17:27:09 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:27:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:27:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:27:09 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 17:27:09 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 17:27:10 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file,) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file,) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near ")"
  Position: 189
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 17:27:17 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 8764 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:27:17 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:27:17 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:27:20 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:27:21 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 248 ms. Found 9 JPA repository interfaces.
2025-08-12 17:27:22 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:27:22 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:27:22 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:27:22 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:27:22 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4864 ms
2025-08-12 17:27:23 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:27:23 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:27:23 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:27:24 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:27:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:27:24 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2bd4780c
2025-08-12 17:27:24 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:27:24 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:27:24 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:27:27 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:27:27 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:27:27 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:27:28 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:27:31 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:27:31 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:27:32 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file,) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
2025-08-12 17:27:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:27:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:27:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:27:32 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 17:27:33 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 17:27:33 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file,) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file,) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near ")"
  Position: 189
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 17:28:42 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 11648 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:28:42 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:28:42 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:28:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:28:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 180 ms. Found 9 JPA repository interfaces.
2025-08-12 17:28:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:28:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:28:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:28:46 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:28:46 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4126 ms
2025-08-12 17:28:47 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:28:47 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:28:47 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:28:48 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:28:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:28:48 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@7b2d58e6
2025-08-12 17:28:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:28:48 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:28:48 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:28:50 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:28:50 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:28:50 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:28:51 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:28:53 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:28:53 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:28:54 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file,) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
2025-08-12 17:28:54 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:28:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:28:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:28:54 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 17:28:54 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 17:28:54 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file,) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file,) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near ")"
  Position: 189
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 17:32:41 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 9484 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:32:41 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:32:41 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:32:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:32:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 203 ms. Found 9 JPA repository interfaces.
2025-08-12 17:32:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:32:46 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:32:46 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:32:47 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:32:47 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5219 ms
2025-08-12 17:32:47 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:32:47 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:32:47 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:32:48 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:32:48 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:32:49 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c3710b3
2025-08-12 17:32:49 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:32:49 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:32:49 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:32:52 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:32:52 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:32:52 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:32:53 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:32:56 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:32:56 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:32:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 17:32:57 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 16.817 seconds (process running for 17.662)
2025-08-12 17:33:07 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 17:33:07 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 17:33:07 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-08-12 17:33:18 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 9616 ms
2025-08-12 17:34:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-12 17:34:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 17:34:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    insert 
    into
        books
        (about, audio_file_url, audio_file, author, available_copies, book_cover_url, book_cover, category_id, created_at, format, isbn, name, pdf_file_url, pdf_file, publication_year, short_details, total_copies, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-12 17:34:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 17:34:14 [http-nio-8080-exec-6] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [bookCover]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.7208372063638493671\work\Tomcat\localhost\ROOT\upload_b4fd50e9_c52f_4b98_8523_5ae541cf4d75_00000001.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.7208372063638493671\work\Tomcat\localhost\ROOT\upload_b4fd50e9_c52f_4b98_8523_5ae541cf4d75_00000001.tmp
	... 13 common frames omitted
2025-08-12 17:34:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-12 17:34:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 17:34:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    insert 
    into
        books
        (about, audio_file_url, audio_file, author, available_copies, book_cover_url, book_cover, category_id, created_at, format, isbn, name, pdf_file_url, pdf_file, publication_year, short_details, total_copies, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-12 17:34:52 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 17:34:52 [http-nio-8080-exec-7] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [bookCover]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.7208372063638493671\work\Tomcat\localhost\ROOT\upload_b4fd50e9_c52f_4b98_8523_5ae541cf4d75_00000005.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.7208372063638493671\work\Tomcat\localhost\ROOT\upload_b4fd50e9_c52f_4b98_8523_5ae541cf4d75_00000005.tmp
	... 13 common frames omitted
2025-08-12 17:34:52 [http-nio-8080-exec-7] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [pdfFile]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.7208372063638493671\work\Tomcat\localhost\ROOT\upload_b4fd50e9_c52f_4b98_8523_5ae541cf4d75_00000006.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.7208372063638493671\work\Tomcat\localhost\ROOT\upload_b4fd50e9_c52f_4b98_8523_5ae541cf4d75_00000006.tmp
	... 13 common frames omitted
2025-08-12 17:34:52 [http-nio-8080-exec-7] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [audioFile]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.7208372063638493671\work\Tomcat\localhost\ROOT\upload_b4fd50e9_c52f_4b98_8523_5ae541cf4d75_00000007.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.7208372063638493671\work\Tomcat\localhost\ROOT\upload_b4fd50e9_c52f_4b98_8523_5ae541cf4d75_00000007.tmp
	... 13 common frames omitted
2025-08-12 17:39:38 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 17:39:38 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 17:39:38 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:39:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:39:38 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:41:58 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 13448 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:41:58 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:41:58 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:42:02 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:42:03 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 169 ms. Found 9 JPA repository interfaces.
2025-08-12 17:42:04 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:42:04 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:42:04 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:42:04 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:42:04 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5569 ms
2025-08-12 17:42:05 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:42:05 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:42:05 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:42:06 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:42:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:42:06 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c154508
2025-08-12 17:42:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:42:06 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:42:06 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:42:10 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:42:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:42:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:42:12 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:42:14 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:42:14 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:42:15 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/1754998492625_GGatsby.jpg,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
2025-08-12 17:42:15 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:42:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:42:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:42:15 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 17:42:15 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 17:42:15 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/1754998492625_GGatsby.jpg,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/1754998492625_GGatsby.jpg,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near "/"
  Position: 403
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 17:43:04 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 12252 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:43:04 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:43:04 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:43:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:43:07 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 168 ms. Found 9 JPA repository interfaces.
2025-08-12 17:43:08 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:43:08 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:43:08 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:43:08 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:43:08 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4403 ms
2025-08-12 17:43:09 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:43:09 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:43:09 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:43:10 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:43:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:43:10 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@ace2408
2025-08-12 17:43:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:43:10 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:43:10 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:43:12 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:43:12 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:43:13 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:43:13 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:43:14 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:43:16 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:43:16 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:43:17 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/1754998492625_GGatsby.jpg,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
2025-08-12 17:43:17 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:43:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:43:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:43:17 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 17:43:17 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 17:43:17 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/1754998492625_GGatsby.jpg,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/1754998492625_GGatsby.jpg,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near "/"
  Position: 403
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 17:44:58 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 9296 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:44:58 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:44:58 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:45:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:45:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 183 ms. Found 9 JPA repository interfaces.
2025-08-12 17:45:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:45:02 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:45:02 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:45:02 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:45:02 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4113 ms
2025-08-12 17:45:03 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:45:03 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:45:03 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:45:04 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:45:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:45:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@103e7c7c
2025-08-12 17:45:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:45:04 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:45:04 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:45:07 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:45:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:45:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:45:08 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:45:11 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:45:11 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:45:11 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/1754998492625_GGatsby.jpg,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
2025-08-12 17:45:12 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:45:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:45:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:45:12 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 17:45:12 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 17:45:12 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/1754998492625_GGatsby.jpg,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at,book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/1754998492625_GGatsby.jpg,null,null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,null,null,null)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near "/"
  Position: 403
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 17:47:57 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 13716 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:47:57 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:47:57 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:48:00 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:48:01 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 174 ms. Found 9 JPA repository interfaces.
2025-08-12 17:48:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:48:02 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:48:02 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:48:02 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:48:02 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4426 ms
2025-08-12 17:48:02 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:48:03 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:48:03 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:48:03 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:48:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:48:04 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@103e7c7c
2025-08-12 17:48:04 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:48:04 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:48:04 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:48:06 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:48:06 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:48:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:48:07 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:48:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:48:07 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:48:09 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:48:10 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:48:10 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null)
2025-08-12 17:48:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:48:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:48:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:48:10 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 17:48:10 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 17:48:10 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: VALUES lists must all be the same length
  Position: 1098
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 17:49:46 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 8416 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:49:46 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:49:46 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:49:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:49:49 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 196 ms. Found 9 JPA repository interfaces.
2025-08-12 17:49:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:49:50 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:49:50 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:49:50 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:49:50 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4615 ms
2025-08-12 17:49:51 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:49:51 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:49:51 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:49:52 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:49:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:49:52 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@103e7c7c
2025-08-12 17:49:52 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:49:52 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:49:52 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:49:55 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:49:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:49:55 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:49:56 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:49:58 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:49:58 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:49:59 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '9780743273565', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('To Kill a Mockingbird', 'Harper Lee', '9784', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('A Brief History of Time', 'Stephen Hawking', '9783', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Clean Code', 'Robert C. Martin', '97874', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Art of War', 'Sun Tzu', '978244', 500, 2, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '9785637', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Good to Great', 'Jim Collins', '9783562', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('1984', 'George Orwell', '9783564', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Origin of Species', 'Charles Darwin', '97835649', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Design Patterns', 'Gang of Four', '97834560', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null)
2025-08-12 17:49:59 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:49:59 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:49:59 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:49:59 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 17:49:59 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 17:49:59 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '9780743273565', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('To Kill a Mockingbird', 'Harper Lee', '9784', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('A Brief History of Time', 'Stephen Hawking', '9783', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Clean Code', 'Robert C. Martin', '97874', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Art of War', 'Sun Tzu', '978244', 500, 2, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '9785637', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Good to Great', 'Jim Collins', '9783562', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('1984', 'George Orwell', '9783564', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Origin of Species', 'Charles Darwin', '97835649', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Design Patterns', 'Gang of Four', '97834560', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '9780743273565', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('To Kill a Mockingbird', 'Harper Lee', '9784', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('A Brief History of Time', 'Stephen Hawking', '9783', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Clean Code', 'Robert C. Martin', '97874', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Art of War', 'Sun Tzu', '978244', 500, 2, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '9785637', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Good to Great', 'Jim Collins', '9783562', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('1984', 'George Orwell', '9783564', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Origin of Species', 'Charles Darwin', '97835649', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Design Patterns', 'Gang of Four', '97834560', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: VALUES lists must all be the same length
  Position: 1056
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 17:53:24 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 1688 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:53:24 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:53:24 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:53:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:53:26 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 189 ms. Found 9 JPA repository interfaces.
2025-08-12 17:53:28 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:53:28 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:53:28 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:53:28 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:53:28 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4017 ms
2025-08-12 17:53:28 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:53:28 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:53:29 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:53:29 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:53:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:53:29 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@103e7c7c
2025-08-12 17:53:29 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:53:29 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:53:29 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:53:32 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:53:32 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:53:32 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:53:33 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:53:35 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:53:35 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:53:35 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null)
2025-08-12 17:53:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:53:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:53:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:53:35 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 17:53:36 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 17:53:36 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: VALUES lists must all be the same length
  Position: 1098
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 17:54:53 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 13216 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:54:53 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:54:53 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:54:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:54:56 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 163 ms. Found 9 JPA repository interfaces.
2025-08-12 17:54:57 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:54:57 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:54:57 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:54:57 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:54:57 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4213 ms
2025-08-12 17:54:58 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:54:58 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:54:58 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:54:58 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:54:58 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:54:59 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c3710b3
2025-08-12 17:54:59 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:54:59 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:54:59 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:55:01 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:55:01 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:55:01 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:55:02 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:55:05 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:55:05 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:55:05 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null)
2025-08-12 17:55:05 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:55:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:55:05 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:55:05 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 17:55:05 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 17:55:06 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP, null, null, null)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: VALUES lists must all be the same length
  Position: 1098
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 17:56:34 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 2092 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:56:34 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:56:34 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:56:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:56:37 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 191 ms. Found 9 JPA repository interfaces.
2025-08-12 17:56:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:56:39 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:56:39 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:56:39 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:56:39 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4621 ms
2025-08-12 17:56:39 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:56:39 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:56:40 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:56:40 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:56:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:56:40 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2a6dbb7c
2025-08-12 17:56:40 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:56:41 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:56:41 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:56:43 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:56:43 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:56:43 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:56:44 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:56:46 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:56:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:56:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 17:56:47 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 14.151 seconds (process running for 15.026)
2025-08-12 17:57:54 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 17:57:54 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 17:57:54 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:57:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 17:57:54 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 17:58:02 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 10756 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 17:58:02 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 17:58:02 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 17:58:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 17:58:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 206 ms. Found 9 JPA repository interfaces.
2025-08-12 17:58:06 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 17:58:06 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 17:58:06 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 17:58:06 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 17:58:06 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4123 ms
2025-08-12 17:58:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 17:58:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 17:58:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 17:58:07 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 17:58:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 17:58:08 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2bd4780c
2025-08-12 17:58:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 17:58:08 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 17:58:08 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 17:58:10 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 17:58:10 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 17:58:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 17:58:11 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 17:58:14 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 17:58:14 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 17:58:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 17:58:15 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 13.76 seconds (process running for 14.556)
2025-08-12 17:59:19 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 17:59:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 17:59:19 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-12 17:59:26 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 5999 ms
2025-08-12 18:00:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-12 18:00:08 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:00:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        books
        (about, audio_file_url, audio_file, author, available_copies, book_cover_url, book_cover, category_id, created_at, format, isbn, name, pdf_file_url, pdf_file, publication_year, short_details, total_copies, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-12 18:00:09 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.audio_file,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.book_cover,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.pdf_file,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:00:09 [http-nio-8080-exec-5] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [bookCover]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.15361539171529693041\work\Tomcat\localhost\ROOT\upload_42b54ca3_9f8b_413a_a110_ee782d5db7ac_00000001.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.15361539171529693041\work\Tomcat\localhost\ROOT\upload_42b54ca3_9f8b_413a_a110_ee782d5db7ac_00000001.tmp
	... 13 common frames omitted
2025-08-12 18:00:09 [http-nio-8080-exec-5] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [pdfFile]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.15361539171529693041\work\Tomcat\localhost\ROOT\upload_42b54ca3_9f8b_413a_a110_ee782d5db7ac_00000002.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.15361539171529693041\work\Tomcat\localhost\ROOT\upload_42b54ca3_9f8b_413a_a110_ee782d5db7ac_00000002.tmp
	... 13 common frames omitted
2025-08-12 18:00:09 [http-nio-8080-exec-5] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [audioFile]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.15361539171529693041\work\Tomcat\localhost\ROOT\upload_42b54ca3_9f8b_413a_a110_ee782d5db7ac_00000003.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.15361539171529693041\work\Tomcat\localhost\ROOT\upload_42b54ca3_9f8b_413a_a110_ee782d5db7ac_00000003.tmp
	... 13 common frames omitted
2025-08-12 18:02:49 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 18:02:49 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 18:02:49 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:02:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 18:02:49 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 18:04:29 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 1052 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 18:04:29 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 18:04:29 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 18:04:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 18:04:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 175 ms. Found 9 JPA repository interfaces.
2025-08-12 18:04:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 18:04:33 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 18:04:33 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 18:04:33 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 18:04:33 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4078 ms
2025-08-12 18:04:34 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 18:04:34 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 18:04:34 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 18:04:35 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 18:04:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 18:04:35 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2bd4780c
2025-08-12 18:04:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 18:04:35 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 18:04:35 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 18:04:38 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 18:04:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 18:04:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:04:39 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 18:04:41 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 18:04:41 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 18:04:42 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/GGatsby.jpg, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
2025-08-12 18:04:42 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:04:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 18:04:42 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 18:04:42 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 18:04:42 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 18:04:42 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/GGatsby.jpg, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover, pdf_file, audio_file) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/GGatsby.jpg, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near "/"
  Position: 404
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 18:06:50 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 8660 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 18:06:50 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 18:06:50 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 18:06:52 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 18:06:53 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 165 ms. Found 9 JPA repository interfaces.
2025-08-12 18:06:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 18:06:54 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 18:06:54 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 18:06:54 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 18:06:54 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4024 ms
2025-08-12 18:06:54 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 18:06:54 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 18:06:55 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 18:06:55 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 18:06:55 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 18:06:56 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@36cf16a6
2025-08-12 18:06:56 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 18:06:56 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 18:06:56 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 18:06:58 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 18:06:58 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 18:06:58 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:06:59 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 18:07:02 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 18:07:02 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 18:07:03 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, bookCoverUrl, bookCoverUrl, bookCoverUrl) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/GGatsby.jpg, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
2025-08-12 18:07:03 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:07:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 18:07:03 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 18:07:03 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 18:07:03 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 18:07:03 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, bookCoverUrl, bookCoverUrl, bookCoverUrl) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/GGatsby.jpg, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, bookCoverUrl, bookCoverUrl, bookCoverUrl) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,/files/covers/GGatsby.jpg, null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: syntax error at or near "/"
  Position: 412
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 18:08:15 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 11300 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 18:08:15 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 18:08:15 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 18:08:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 18:08:19 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 167 ms. Found 9 JPA repository interfaces.
2025-08-12 18:08:20 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 18:08:20 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 18:08:20 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 18:08:20 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 18:08:20 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4673 ms
2025-08-12 18:08:21 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 18:08:21 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 18:08:21 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 18:08:22 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 18:08:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 18:08:22 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@ace2408
2025-08-12 18:08:22 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 18:08:22 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 18:08:22 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 18:08:24 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 18:08:24 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 18:08:25 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 18:08:25 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 18:08:25 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 18:08:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 18:08:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 18:08:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 18:08:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 18:08:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 18:08:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 18:08:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 18:08:25 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 18:08:25 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:08:25 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 18:08:28 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 18:08:28 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 18:08:28 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, bookCoverUrl, bookCoverUrl, bookCoverUrl) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,'/files/covers/GGatsby.jpg', null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
2025-08-12 18:08:28 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:08:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 18:08:28 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 18:08:28 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 18:08:28 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 18:08:28 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, bookCoverUrl, bookCoverUrl, bookCoverUrl) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,'/files/covers/GGatsby.jpg', null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, bookCoverUrl, bookCoverUrl, bookCoverUrl) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,'/files/covers/GGatsby.jpg', null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: column "bookcoverurl" of relation "books" does not exist
  Position: 157
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 18:11:01 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 12940 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 18:11:01 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 18:11:01 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 18:11:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 18:11:05 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 172 ms. Found 9 JPA repository interfaces.
2025-08-12 18:11:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 18:11:07 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 18:11:07 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 18:11:07 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 18:11:07 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 5216 ms
2025-08-12 18:11:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 18:11:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 18:11:08 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 18:11:08 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 18:11:08 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 18:11:09 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@103e7c7c
2025-08-12 18:11:09 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 18:11:09 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 18:11:09 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 18:11:11 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 18:11:11 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 18:11:11 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:11:13 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 18:11:15 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 18:11:15 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 18:11:15 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, bookCoverUrl, pdfFileUrl, audioFileUrl) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,'/files/covers/GGatsby.jpg', null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
2025-08-12 18:11:15 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:11:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 18:11:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 18:11:15 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 18:11:16 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 18:11:16 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, bookCoverUrl, pdfFileUrl, audioFileUrl) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,'/files/covers/GGatsby.jpg', null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, bookCoverUrl, pdfFileUrl, audioFileUrl) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,'/files/covers/GGatsby.jpg', null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: column "bookcoverurl" of relation "books" does not exist
  Position: 157
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 18:17:06 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 13188 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 18:17:06 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 18:17:06 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 18:17:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 18:17:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 177 ms. Found 9 JPA repository interfaces.
2025-08-12 18:17:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 18:17:10 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 18:17:10 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 18:17:10 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 18:17:10 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 3982 ms
2025-08-12 18:17:11 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 18:17:11 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 18:17:11 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 18:17:11 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 18:17:11 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 18:17:12 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@103e7c7c
2025-08-12 18:17:12 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 18:17:12 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 18:17:12 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 18:17:14 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file varchar(255),
        author varchar(255) not null,
        book_cover varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 18:17:14 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 18:17:14 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:17:15 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 18:17:17 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 18:17:17 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 18:17:18 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, bookCover, pdfFile, audioFile) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,'/files/covers/GGatsby.jpg', null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
2025-08-12 18:17:18 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:17:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 18:17:18 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 18:17:18 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 18:17:18 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 18:17:18 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, bookCover, pdfFile, audioFile) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,'/files/covers/GGatsby.jpg', null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, bookCover, pdfFile, audioFile) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,'/files/covers/GGatsby.jpg', null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: column "bookcover" of relation "books" does not exist
  Position: 157
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 18:18:45 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 10624 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 18:18:45 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 18:18:45 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 18:18:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 18:18:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 168 ms. Found 9 JPA repository interfaces.
2025-08-12 18:18:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 18:18:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 18:18:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 18:18:50 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 18:18:50 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4072 ms
2025-08-12 18:18:50 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 18:18:50 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 18:18:50 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 18:18:51 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 18:18:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 18:18:51 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2bd4780c
2025-08-12 18:18:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 18:18:51 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 18:18:51 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 18:18:53 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 18:18:53 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 18:18:54 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 18:18:54 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 18:18:54 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 18:18:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 18:18:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 18:18:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 18:18:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 18:18:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 18:18:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 18:18:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 18:18:54 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 18:18:54 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:18:54 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 18:18:56 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 18:18:56 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 18:18:57 [main] WARN  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover_url, pdf_file_url, audio_file_url) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,'/files/covers/GGatsby.jpg', null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
2025-08-12 18:18:57 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:18:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 18:18:57 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 18:18:57 [main] INFO  o.a.catalina.core.StandardService - Stopping service [Tomcat]
2025-08-12 18:18:57 [main] INFO  o.s.b.a.l.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-08-12 18:18:57 [main] ERROR o.s.boot.SpringApplication - Application run failed
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSourceScriptDatabaseInitializer' defined in class path resource [org/springframework/boot/autoconfigure/sql/init/DataSourceInitializationConfiguration.class]: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover_url, pdf_file_url, audio_file_url) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,'/files/covers/GGatsby.jpg', null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1826)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:607)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:529)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:339)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1222)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1188)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1123)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1361)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1350)
	at com.library.management.LibraryManagementApplication.main(LibraryManagementApplication.java:8)
Caused by: org.springframework.jdbc.datasource.init.ScriptStatementFailedException: Failed to execute SQL script statement #3 of class path resource [data.sql]: INSERT INTO books (name, author, isbn, publication_year, total_copies, available_copies, category_id, short_details, about, format, created_at, updated_at, book_cover_url, pdf_file_url, audio_file_url) VALUES ('The Great Gatsby', 'F. Scott Fitzgerald', '978-0-7432-7356-5', 1925, 5, 3, 1, 'A classic American novel', 'A classic American novel set in the Jazz Age', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP,'/files/covers/GGatsby.jpg', null, null), ('To Kill a Mockingbird', 'Harper Lee', '978-0-06-112008-4', 1960, 4, 2, 1, 'A novel about racial injustice', 'A novel about racial injustice in the American South', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('A Brief History of Time', 'Stephen Hawking', '978-0-553-38016-3', 1988, 3, 3, 2, 'A popular science book', 'A popular science book about cosmology', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Clean Code', 'Robert C. Martin', '978-0-13-235088-4', 2008, 6, 4, 3, 'A handbook of agile software', 'A handbook of agile software craftsmanship', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Art of War', 'Sun Tzu', '978-0-14-044919-4', 500, 2, 1, 4, 'Ancient Chinese military treatise', 'Ancient Chinese military treatise', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Thinking, Fast and Slow', 'Daniel Kahneman', '978-0-374-53355-7', 2011, 4, 4, 5, 'A book about behavioral psychology', 'A book about behavioral psychology and decision-making', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Good to Great', 'Jim Collins', '978-0-06-662099-2', 2001, 3, 2, 6, 'A management book', 'A management book about company transformation', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('1984', 'George Orwell', '978-0-452-28423-4', 1949, 5, 3, 1, 'A dystopian social science fiction', 'A dystopian social science fiction novel', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('The Origin of Species', 'Charles Darwin', '978-0-14-043205-9', 1859, 2, 2, 2, 'A work of scientific literature', 'A work of scientific literature on evolution', 'HARD_COPY', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP), ('Design Patterns', 'Gang of Four', '978-0-201-63361-0', 1994, 4, 3, 3, 'Elements of reusable software', 'Elements of reusable object-oriented software', 'E_BOOK', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:282)
	at org.springframework.jdbc.datasource.init.ResourceDatabasePopulator.populate(ResourceDatabasePopulator.java:254)
	at org.springframework.jdbc.datasource.init.DatabasePopulatorUtils.execute(DatabasePopulatorUtils.java:54)
	at org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializer.runScripts(DataSourceScriptDatabaseInitializer.java:87)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.runScripts(AbstractScriptDatabaseInitializer.java:146)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyScripts(AbstractScriptDatabaseInitializer.java:108)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.applyDataScripts(AbstractScriptDatabaseInitializer.java:102)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.initializeDatabase(AbstractScriptDatabaseInitializer.java:77)
	at org.springframework.boot.sql.init.AbstractScriptDatabaseInitializer.afterPropertiesSet(AbstractScriptDatabaseInitializer.java:66)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1873)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1822)
	... 20 common frames omitted
Caused by: org.postgresql.util.PSQLException: ERROR: VALUES lists must all be the same length
  Position: 459
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2734)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2421)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:372)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:518)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:435)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:357)
	at org.postgresql.jdbc.PgStatement.executeCachedSql(PgStatement.java:342)
	at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:318)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:313)
	at com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
	at com.zaxxer.hikari.pool.HikariProxyStatement.execute(HikariProxyStatement.java)
	at org.springframework.jdbc.datasource.init.ScriptUtils.executeSqlScript(ScriptUtils.java:261)
	... 30 common frames omitted
2025-08-12 18:20:29 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 11852 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 18:20:29 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 18:20:29 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 18:20:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 18:20:32 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 183 ms. Found 9 JPA repository interfaces.
2025-08-12 18:20:33 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 18:20:33 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 18:20:33 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 18:20:34 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 18:20:34 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4098 ms
2025-08-12 18:20:34 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 18:20:34 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 18:20:34 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 18:20:35 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 18:20:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 18:20:35 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@36cf16a6
2025-08-12 18:20:35 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 18:20:35 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 18:20:35 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 18:20:37 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 18:20:37 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 18:20:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 18:20:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 18:20:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 18:20:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 18:20:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 18:20:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 18:20:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 18:20:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 18:20:38 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 18:20:38 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:20:39 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 18:20:41 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 18:20:41 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 18:20:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 18:20:42 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 13.231 seconds (process running for 13.956)
2025-08-12 18:21:34 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 18:21:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 18:21:34 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-12 18:21:42 [http-nio-8080-exec-4] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 6372 ms
2025-08-12 18:22:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.isbn=?
2025-08-12 18:22:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:22:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    insert 
    into
        books
        (about, audio_file_url, author, available_copies, book_cover_url, category_id, created_at, format, isbn, name, pdf_file_url, publication_year, short_details, total_copies, updated_at) 
    values
        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
2025-08-12 18:22:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:22:19 [http-nio-8080-exec-5] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [bookCover]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.16191176788336572005\work\Tomcat\localhost\ROOT\upload_27776502_1065_4beb_8bbf_798eb75fec4d_00000001.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.16191176788336572005\work\Tomcat\localhost\ROOT\upload_27776502_1065_4beb_8bbf_798eb75fec4d_00000001.tmp
	... 13 common frames omitted
2025-08-12 18:22:19 [http-nio-8080-exec-5] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [pdfFile]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.16191176788336572005\work\Tomcat\localhost\ROOT\upload_27776502_1065_4beb_8bbf_798eb75fec4d_00000002.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.16191176788336572005\work\Tomcat\localhost\ROOT\upload_27776502_1065_4beb_8bbf_798eb75fec4d_00000002.tmp
	... 13 common frames omitted
2025-08-12 18:22:19 [http-nio-8080-exec-5] WARN  o.apache.catalina.connector.Request - Failed to deleted temporary file used for part [audioFile]
java.io.UncheckedIOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.16191176788336572005\work\Tomcat\localhost\ROOT\upload_27776502_1065_4beb_8bbf_798eb75fec4d_00000003.tmp
	at org.apache.tomcat.util.http.fileupload.disk.DiskFileItem.delete(DiskFileItem.java:196)
	at org.apache.catalina.core.ApplicationPart.delete(ApplicationPart.java:53)
	at org.apache.catalina.connector.Request.recycle(Request.java:470)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:422)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
Caused by: java.io.IOException: Cannot delete C:\Users\c6-std14\AppData\Local\Temp\tomcat.8080.16191176788336572005\work\Tomcat\localhost\ROOT\upload_27776502_1065_4beb_8bbf_798eb75fec4d_00000003.tmp
	... 13 common frames omitted
2025-08-12 18:24:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:24:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:57 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:24:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:24:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-2] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:24:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:24:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:24:59 [http-nio-8080-exec-5] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-8] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:19 [http-nio-8080-exec-2] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:19 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:23 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:25:23 [http-nio-8080-exec-10] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-5] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:25:23 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:26:44 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        upper(b1_0.name) like upper(?) escape '\' 
        or upper(b1_0.author) like upper(?) escape '\' 
        or upper(b1_0.isbn) like upper(?) escape '\' 
    fetch
        first ? rows only
2025-08-12 18:26:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:26:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:26:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:26:45 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:26:45 [http-nio-8080-exec-10] WARN  o.s.d.w.c.SpringDataJacksonConfiguration$PageModule$WarningLoggingModifier - Serializing PageImpl instances as-is is not supported, meaning that there is no guarantee about the stability of the resulting JSON structure!
	For a stable JSON structure, please use Spring Data's PagedModel (globally via @EnableSpringDataWebSupport(pageSerializationMode = VIA_DTO))
	or Spring HATEOAS and Spring Data's PagedResourcesAssembler as documented in https://docs.spring.io/spring-data/commons/reference/repositories/core-extensions.html#core.web.pageables.

2025-08-12 18:28:31 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 18:28:31 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 18:28:31 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:28:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 18:28:31 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 18:28:41 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 4656 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 18:28:41 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 18:28:41 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 18:28:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 18:28:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 171 ms. Found 9 JPA repository interfaces.
2025-08-12 18:28:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 18:28:47 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 18:28:47 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 18:28:48 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 18:28:48 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6487 ms
2025-08-12 18:28:48 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 18:28:49 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 18:28:49 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 18:28:50 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 18:28:50 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 18:28:51 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@ace2408
2025-08-12 18:28:51 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 18:28:51 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 18:28:51 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 18:28:55 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 18:28:55 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 18:28:55 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:28:57 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 18:29:00 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 18:29:00 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 18:29:02 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 18:29:02 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 23.202 seconds (process running for 25.663)
2025-08-12 18:29:03 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 18:29:03 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 18:29:03 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-12 18:29:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:29:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:03 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-4] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:29:04 [http-nio-8080-exec-1] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:04 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:05 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:29:05 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:30:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:30:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:30:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:30:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:30:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:30:28 [http-nio-8080-exec-9] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-2] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:30:28 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:26 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:31:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:31:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-4] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-1] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:31:27 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:34:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:34:01 [http-nio-8080-exec-7] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:34:01 [http-nio-8080-exec-1] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:58 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-6] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-10] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:35:59 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:36:40 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:40 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-7] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:36:41 [http-nio-8080-exec-6] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:36:41 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:38:35 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 18:38:35 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 18:38:35 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:38:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 18:38:35 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 18:38:44 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 7852 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 18:38:44 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 18:38:44 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 18:38:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 18:38:48 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 209 ms. Found 9 JPA repository interfaces.
2025-08-12 18:38:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 18:38:50 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 18:38:50 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 18:38:50 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 18:38:50 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6416 ms
2025-08-12 18:38:51 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 18:38:51 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 18:38:52 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 18:38:53 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 18:38:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 18:38:53 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@377e90b0
2025-08-12 18:38:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 18:38:53 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 18:38:53 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 18:38:56 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 18:38:56 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 18:38:56 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:38:58 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 18:39:00 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 18:39:00 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 18:39:01 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 18:39:01 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 18.873 seconds (process running for 20.953)
2025-08-12 18:39:12 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 18:39:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 18:39:12 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-08-12 18:39:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:39:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:13 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-10] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:14 [http-nio-8080-exec-4] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:14 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:26 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 18:39:26 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 18:39:26 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:39:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 18:39:26 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 18:39:29 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 5388 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 18:39:29 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 18:39:29 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 18:39:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 18:39:33 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 181 ms. Found 9 JPA repository interfaces.
2025-08-12 18:39:34 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 18:39:34 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 18:39:34 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 18:39:34 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 18:39:34 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4737 ms
2025-08-12 18:39:35 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 18:39:35 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 18:39:35 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 18:39:36 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 18:39:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 18:39:36 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c3710b3
2025-08-12 18:39:36 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 18:39:36 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 18:39:36 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 18:39:39 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 18:39:39 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 18:39:39 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:39:40 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 18:39:42 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 18:39:42 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 18:39:43 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 18:39:43 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 14.805 seconds (process running for 15.561)
2025-08-12 18:39:53 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 18:39:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 18:39:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-12 18:39:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:39:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:39:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-10] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:39:55 [http-nio-8080-exec-1] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:40:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:40:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:53 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-7] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:40:54 [http-nio-8080-exec-4] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:44:04 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 18:44:04 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 18:44:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:44:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 18:44:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 18:44:09 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 10248 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 18:44:09 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 18:44:09 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 18:44:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 18:44:12 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 202 ms. Found 9 JPA repository interfaces.
2025-08-12 18:44:13 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 18:44:13 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 18:44:13 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 18:44:13 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 18:44:13 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 4536 ms
2025-08-12 18:44:14 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 18:44:14 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 18:44:14 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 18:44:15 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 18:44:15 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 18:44:16 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@5c3710b3
2025-08-12 18:44:16 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 18:44:16 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 18:44:16 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 18:44:18 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 18:44:18 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 18:44:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 18:44:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 18:44:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 18:44:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 18:44:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 18:44:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 18:44:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 18:44:18 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 18:44:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 18:44:18 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 18:44:19 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 18:44:19 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:44:20 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 18:44:25 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 18:44:25 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 18:44:27 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 18:44:27 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 19.155 seconds (process running for 19.909)
2025-08-12 18:45:52 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 18:45:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 18:45:52 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 6 ms
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:45:53 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:23 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 7684 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 18:54:23 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 18:54:23 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 18:54:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 18:54:29 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 143 ms. Found 9 JPA repository interfaces.
2025-08-12 18:54:30 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 18:54:30 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 18:54:30 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 18:54:31 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 18:54:31 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7195 ms
2025-08-12 18:54:31 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 18:54:32 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 18:54:32 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 18:54:33 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 18:54:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 18:54:33 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@ace2408
2025-08-12 18:54:33 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 18:54:34 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 18:54:34 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 18:54:37 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 18:54:37 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 18:54:37 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 18:54:39 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 18:54:41 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 18:54:41 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 18:54:42 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 18:54:42 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 20.978 seconds (process running for 22.902)
2025-08-12 18:54:54 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 18:54:54 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 18:54:54 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:54:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 18:54:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:54:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:55 [http-nio-8080-exec-10] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 18:54:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-4] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:54:56 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:56:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:56:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 18:57:49 [http-nio-8080-exec-7] INFO  o.s.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 8468 ms
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:00:18 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:08:40 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 19:08:40 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 19:08:40 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 19:08:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 19:08:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 19:09:23 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 14144 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 19:09:23 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 19:09:23 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 19:09:27 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 19:09:28 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 213 ms. Found 9 JPA repository interfaces.
2025-08-12 19:09:29 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 19:09:29 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 19:09:29 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 19:09:30 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 19:09:30 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 6286 ms
2025-08-12 19:09:30 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 19:09:30 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 19:09:30 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 19:09:31 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 19:09:31 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 19:09:32 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2c154508
2025-08-12 19:09:32 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 19:09:32 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 19:09:32 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 19:09:34 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 19:09:34 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 19:09:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 19:09:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 19:09:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 19:09:35 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 19:09:35 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 19:09:35 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 19:09:37 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 19:09:38 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 19:09:38 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 19:09:39 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 17.417 seconds (process running for 18.467)
2025-08-12 19:09:54 [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 19:09:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 19:09:54 [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 4 ms
2025-08-12 19:09:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-12 19:09:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:54 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:55 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 19:09:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:58 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-4] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:09:59 [http-nio-8080-exec-8] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 19:20:30 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 19:20:30 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 19:20:30 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 19:20:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 19:20:30 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-08-12 19:29:42 [main] INFO  c.l.m.LibraryManagementApplication - Starting LibraryManagementApplication using Java 24.0.2 with PID 4204 (C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system\target\classes started by c6-std14 in C:\Users\c6-std14\Desktop\Nahid\LMS\Backend\library-management-system)
2025-08-12 19:29:42 [main] DEBUG c.l.m.LibraryManagementApplication - Running with Spring Boot v3.5.4, Spring v6.2.9
2025-08-12 19:29:42 [main] INFO  c.l.m.LibraryManagementApplication - No active profile set, falling back to 1 default profile: "default"
2025-08-12 19:29:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-08-12 19:29:46 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 301 ms. Found 9 JPA repository interfaces.
2025-08-12 19:29:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-08-12 19:29:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-08-12 19:29:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.43]
2025-08-12 19:29:50 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-08-12 19:29:50 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 7418 ms
2025-08-12 19:29:51 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-08-12 19:29:51 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.22.Final
2025-08-12 19:29:51 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-08-12 19:29:52 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-08-12 19:29:53 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-08-12 19:29:54 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@11309dd4
2025-08-12 19:29:54 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-08-12 19:29:54 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-08-12 19:29:54 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 17.5
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-08-12 19:29:59 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    set client_min_messages = WARNING
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKm827phjjfy5m6q8vsjmi1gybv
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       drop constraint if exists FKeyog2oic85xg7hsu2je2lx3s6
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       drop constraint if exists FKleqa3hhc0uhfvurq6mil47xk0
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FK8789wjikihu9ocbhamiw789y9
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       drop constraint if exists FKd64ttskt7j96v1nqtpry3pp2a
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       drop constraint if exists FK42i2vj0hduc4jwntg1ute8v4g
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FK6a9k6xvev80se5rreqvuqr7f9
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       drop constraint if exists FKcgy7qjc1r99dp117y9en6lxye
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists admin_settings cascade
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists bookings cascade
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists books cascade
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists borrows cascade
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists categories cascade
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists donation_requests cascade
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists notifications cascade
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists reviews cascade
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    drop table if exists users cascade
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    create table admin_settings (
        booking_days_limit integer,
        borrow_book_limit integer,
        borrow_day_limit integer,
        borrow_extend_limit integer,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        primary key (id)
    )
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    create table bookings (
        booking_date date not null,
        expected_available_date date not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('PENDING','FULFILLED','CANCELLED','EXPIRED')),
        primary key (id)
    )
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    create table books (
        available_copies integer not null,
        publication_year integer,
        total_copies integer not null,
        category_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        about TEXT,
        audio_file_url varchar(255),
        author varchar(255) not null,
        book_cover_url varchar(255),
        format varchar(255) not null check (format in ('HARD_COPY','E_BOOK','AUDIO_BOOK')),
        isbn varchar(255) unique,
        name varchar(255) not null,
        pdf_file_url varchar(255),
        short_details varchar(255),
        primary key (id)
    )
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    create table borrows (
        borrow_date date not null,
        due_date date not null,
        extension_count integer,
        return_date date,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        status varchar(255) not null check (status in ('ACTIVE','RETURNED','OVERDUE')),
        primary key (id)
    )
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    create table categories (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        description varchar(255),
        name varchar(255) not null unique,
        primary key (id)
    )
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    create table donation_requests (
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        admin_notes TEXT,
        author varchar(255) not null,
        book_title varchar(255) not null,
        description TEXT,
        isbn varchar(255),
        status varchar(255) not null check (status in ('PENDING','APPROVED','REJECTED','RECEIVED')),
        primary key (id)
    )
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    create table notifications (
        read boolean not null,
        id bigint generated by default as identity,
        timestamp timestamp(6),
        message varchar(255),
        recipient varchar(255),
        primary key (id)
    )
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    create table reviews (
        rating integer not null,
        book_id bigint not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        user_id bigint not null,
        comment TEXT,
        primary key (id)
    )
2025-08-12 19:29:59 [main] DEBUG org.hibernate.SQL - 
    create table users (
        date_of_birth date,
        is_active boolean not null,
        created_at timestamp(6),
        id bigint generated by default as identity,
        updated_at timestamp(6),
        address varchar(255),
        email varchar(255) not null unique,
        moodle_id varchar(255) not null unique,
        name varchar(255) not null,
        role varchar(255) not null check (role in ('ADMIN','USER','MEMBER','LIBRARIAN')),
        primary key (id)
    )
2025-08-12 19:30:00 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKm827phjjfy5m6q8vsjmi1gybv 
       foreign key (book_id) 
       references books
2025-08-12 19:30:00 [main] DEBUG org.hibernate.SQL - 
    alter table if exists bookings 
       add constraint FKeyog2oic85xg7hsu2je2lx3s6 
       foreign key (user_id) 
       references users
2025-08-12 19:30:00 [main] DEBUG org.hibernate.SQL - 
    alter table if exists books 
       add constraint FKleqa3hhc0uhfvurq6mil47xk0 
       foreign key (category_id) 
       references categories
2025-08-12 19:30:00 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FK8789wjikihu9ocbhamiw789y9 
       foreign key (book_id) 
       references books
2025-08-12 19:30:00 [main] DEBUG org.hibernate.SQL - 
    alter table if exists borrows 
       add constraint FKd64ttskt7j96v1nqtpry3pp2a 
       foreign key (user_id) 
       references users
2025-08-12 19:30:00 [main] DEBUG org.hibernate.SQL - 
    alter table if exists donation_requests 
       add constraint FK42i2vj0hduc4jwntg1ute8v4g 
       foreign key (user_id) 
       references users
2025-08-12 19:30:00 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FK6a9k6xvev80se5rreqvuqr7f9 
       foreign key (book_id) 
       references books
2025-08-12 19:30:00 [main] DEBUG org.hibernate.SQL - 
    alter table if exists reviews 
       add constraint FKcgy7qjc1r99dp117y9en6lxye 
       foreign key (user_id) 
       references users
2025-08-12 19:30:00 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 19:30:05 [main] INFO  o.s.d.j.r.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-08-12 19:30:11 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 2 endpoints beneath base path '/actuator'
2025-08-12 19:30:11 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-08-12 19:30:15 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-08-12 19:30:15 [main] INFO  c.l.m.LibraryManagementApplication - Started LibraryManagementApplication in 34.302 seconds (process running for 35.031)
2025-08-12 19:32:09 [http-nio-8080-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-08-12 19:32:09 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-08-12 19:32:09 [http-nio-8080-exec-2] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:32:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:10 [http-nio-8080-exec-10] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-1] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:11 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:32:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:49 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-5] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:32:50 [http-nio-8080-exec-7] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:35:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 19:35:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:35:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 19:35:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:35:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:35:38 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 19:35:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:35:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:38 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:38 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-6] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 19:35:39 [http-nio-8080-exec-2] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:39 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:35:43 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:35:43 [http-nio-8080-exec-3] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 19:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-2] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-9] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-10] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-4] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-7] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-6] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-3] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.created_at desc 
    fetch
        first ? rows only
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.category_id,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    order by
        b1_0.id desc 
    fetch
        first ? rows only
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-2] ERROR c.l.m.e.GlobalExceptionHandler - Unexpected error occurred: 
org.springframework.web.servlet.resource.NoResourceFoundException: No static resource api/featured-books/list.
	at org.springframework.web.servlet.resource.ResourceHttpRequestHandler.handleRequest(ResourceHttpRequestHandler.java:585)
	at org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter.handle(HttpRequestHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:110)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1769)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1447)
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        count(b1_0.id) 
    from
        books b1_0
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-8] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-1] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        c1_0.id,
        c1_0.created_at,
        c1_0.description,
        c1_0.name,
        c1_0.updated_at 
    from
        categories c1_0 
    where
        c1_0.id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        b1_0.category_id,
        b1_0.id,
        b1_0.about,
        b1_0.audio_file_url,
        b1_0.author,
        b1_0.available_copies,
        b1_0.book_cover_url,
        b1_0.created_at,
        b1_0.format,
        b1_0.isbn,
        b1_0.name,
        b1_0.pdf_file_url,
        b1_0.publication_year,
        b1_0.short_details,
        b1_0.total_copies,
        b1_0.updated_at 
    from
        books b1_0 
    where
        b1_0.category_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:36:15 [http-nio-8080-exec-5] DEBUG org.hibernate.SQL - 
    select
        r1_0.book_id,
        r1_0.id,
        r1_0.comment,
        r1_0.created_at,
        r1_0.rating,
        r1_0.updated_at,
        r1_0.user_id 
    from
        reviews r1_0 
    where
        r1_0.book_id=?
2025-08-12 19:37:21 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-08-12 19:37:21 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-08-12 19:37:21 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-08-12 19:37:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-08-12 19:37:21 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
